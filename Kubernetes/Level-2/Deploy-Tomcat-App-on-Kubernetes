# Problem Statement
#
#
# A new java-based application is ready to be deployed on a Kubernetes cluster.
# The development team had a meeting with the DevOps team to share the 
# requirements and application scope.The team is ready to setup an application 
# stack for it under their existing cluster.Below you can find the details for
# this:
#
#
# Create a namespace named tomcat-namespace-xfusion.
#
# Create a deployment for tomcat app which should be named as 
# tomcat-deployment-xfusion under the same namespace you created.
# Replica count should be 1,the container should be named as 
# tomcat-container-xfusion,its image should be 
# gcr.io/kodekloud/centos-ssh-enabled:tomcat and its container port 
# should be 8080.
#
# Create a service for tomcat app which should be named as 
# tomcat-service-xfusion under the same namespace you created.Service 
# type should be NodePort and nodePort should be 32227
#
#
# Solution Script
#
# create namespace per task
kubectl create ns tomcat-namespace-xfusion
#
# manifest the yaml file 
kubectl create deployment tomcat-deployment-xfusion --image=gcr.io/kodekloud/centos-ssh-enabled:tomcat --namespace tomcat-namespace-xfusion --dry-run=client -o yaml > tomcat.yaml
#
# edit the yaml file as instructed in task
vi tomcat.yaml
cat tomcat.yaml
#--------------------------------------------------
#
# content of yaml file
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment-xfusion
  namespace: tomcat-namespace-xfusion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat-deployment-pod
  strategy: {}
  template:
    metadata:
      labels:
        app: tomcat-deployment-pod
    spec:
      containers:
      - image: gcr.io/kodekloud/centos-ssh-enabled:tomcat
        name: tomcat-container-xfusion
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service-xfusion
  namespace: tomcat-namespace-xfusion
spec:
  type: NodePort
  selector:
    app: tomcat-deployment-pod
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 32227
#-------------------------------------------------------------------
# create the resource deployment and service from edited yaml file
kubectl create -f tomcat.yaml
# validate the task by accessing tomcat
curl http://localhost:32227
