# Problem Statement
#
# The Nautilus DevOps team is working on a Kubernetes template to deploy 
# a web application on the cluster.There are some requirements to create/use 
# persistent volumes to store the application code,and the template needs 
# to be designed accordingly.Please find more details below:
#
#
# Create a PersistentVolume named as pv-nautilus.Configure the spec as storage 
# class should be manual,set capacity to 3Gi,set access mode to ReadWriteOnce,
# volume type should be hostPath and set path to /mnt/itadmin (this directory 
# is already created, you might not be able to access it directly, so you need 
# not to worry about it).
#
# Create a PersistentVolumeClaim named as pvc-nautilus.Configure the spec 
# as storage class should be manual, request 3Gi of the storage, set access 
# mode to ReadWriteOnce.
#
# Create a pod named as pod-nautilus, mount the persistent volume you created 
# with claim name pvc-nautilus at document root of the web server,the container # within the pod should be named as container-nautilus using image httpd with 
# latest tag only (remember to mention the tag i.e httpd:latest).
#
# Create a node port type service named web-nautilus using node port 30008 to 
# expose the web server running within the pod.
#
# Solution Script:
#
# create persistent volume and versistent volume claim as instructed
@ in task
vi pv.yaml
cat pv.yaml
#-----------------------------------------------------------------------
#
# content of yaml file
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-nautilus
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  hostPath:
      path: /mnt/itadmin
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nautilus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: manual
 #------------------------------------------------------------------
 #
 # manifest yaml file for resource pod
 kubectl run pod-nautilus --image=httpd:latest --dry-run=client -o yaml >pod.yml
 # edit yaml file as instructed in task
 vi pod.yml
 cat pod.yml
 #------------------------------------------------------------------
 #
 # content of yaml file
 apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nautilus-app-pod
  name: pod-nautilus
spec:
  volumes:
  - name: volm-log
    persistentVolumeClaim:
      claimName: pvc-nautilus
  containers:
  - image: httpd:latest
    name: container-nautilus
    volumeMounts:
      - mountPath: "/var/www/html"
        name: volm-log
---
apiVersion: v1
kind: Service
metadata:
  name: web-nautilus
spec:
  type: NodePort
  selector:
    app: nautilus-app-pod
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30008
#---------------------------------------------------------------------
#
# create pod and service resource along with pv and pvc 
# from yaml file
kubectl create -f pv.yaml
kubectl create -f pod.yaml
# validate the task by accessing the content
curl http://localhost:30008
